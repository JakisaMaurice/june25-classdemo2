# ---
# name: test python
# on: [push, pull_request]
# jobs:
#   test:
#     runs-on: ubuntu-latest
#     env:
#       VENV: venv
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.10'
#       - name: Install dependencies
#         needs: set up python
#         run: |
#           # python -m pip install --upgrade pip
#           # pip install -r requirements.txt
#           python -m venv $VENV
#           source $VENV/bin/activate
#           pip install -r requirements.txt
#       - name: Run tests
#         needs: install dependencies
#         run: source $VENV/bin/activate
#              pytest
#       - name: lint with pylint
#         needs: run tests
#         if: success()
#         run: |
#           source $VENV/bin/activate
#           pip install pylint
#           pylint **/*.py

name: test python

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      VENV: venv

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m venv $VENV
          source $VENV/bin/activate
          pip install -r requirements.txt

      - name: Run tests
        run: |
          source $VENV/bin/activate
          pytest

  lint:
    runs-on: ubuntu-latest
    needs: test
    env:
      VENV: venv

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m venv $VENV
          source $VENV/bin/activate
          pip install -r requirements.txt
          pip install pylint

      - name: Run pylint
        run: |
          source $VENV/bin/activate
          pylint --ignore=config/urls.py,greeting/admin.py,greeting/apps.py,greeting/models.py,
          greeting/tests.py,greeting/urls.py,greeting/views.py,manage.py $(git ls-files '*.py')
